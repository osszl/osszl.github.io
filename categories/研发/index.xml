<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>研发 on 在路上</title>
    <link>http://www.szlx.me/categories/%E7%A0%94%E5%8F%91/</link>
    <description>Recent content in 研发 on 在路上</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you likes to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 12 Aug 2018 16:01:41 +0800</lastBuildDate>
    
	<atom:link href="http://www.szlx.me/categories/%E7%A0%94%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>弄了个 RSA 小工具</title>
      <link>http://www.szlx.me/post/rsa-%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 12 Aug 2018 16:01:41 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/rsa-%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;客户对项目进行安全检查的时候，忽然间提出了密码不能明文传输的要求。说实在的，在研发的过程中，还真的没有重视过这个问题，既然提出来了，那就得解决。既然要解决，那就不能随便忽悠，要严肃的解决。经过筛选，选择了相对完善，并且开发难度较低的方案：使用非对称加密算法，在浏览器端使用公钥对密码原文加密，并将加密后的密文传递到后来，后台收到密文后使用私钥进行解密得到密码原文，然后继续处理现有逻辑。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个简易的项目构建与部署脚本</title>
      <link>http://www.szlx.me/post/simple-build-deploy-sh/</link>
      <pubDate>Wed, 03 Jan 2018 17:32:52 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/simple-build-deploy-sh/</guid>
      <description>&lt;p&gt;在创始型的一个物流互联网平台团队里，有伙伴反复抱怨为了适用不同的环境构建、部署工程要多长多长的时间，而且一步小心就忘了啥，劳神费时！交接情况后，发现基本如此，并且一些当前高大上的一些做法也无法开展。&lt;/p&gt;

&lt;p&gt;思前思后，觉得搞个脚本能解决些体力的事情。于是硬着头皮一遍凭着很久前对 shell 的一些记忆，一边百度，写了2个脚本。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Validation库使用指南</title>
      <link>http://www.szlx.me/post/validation%E5%BA%93%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 09 Aug 2017 16:22:11 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/validation%E5%BA%93%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;a href=&#34;https://gitee.com/lxrj/validation/&#34;&gt;Validation工具库&lt;/a&gt;是个为改进团队协作，规范代码而生的工具包，主要应用场景是业务的前置条件检测以及后置条件检测。如果检测不通过则立即抛出异常并终止处理。它具有以下主要特点：&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;简单但不失灵活，开箱即用；&lt;/li&gt;
&lt;li&gt;友好并可配置；&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;基本依赖只有slf4j-api,其他依赖根据使用方式可选：&lt;a href=&#34;https://github.com/lukehutch/fast-classpath-scanner&#34;&gt;fast-classpath-scanner&lt;/a&gt;，&lt;a href=&#34;https://bitbucket.org/asomov/snakeyaml&#34;&gt;snakeyaml&lt;/a&gt;，&lt;a href=&#34;https://github.com/lightbend/config&#34;&gt;config&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么制作Validation检测库</title>
      <link>http://www.szlx.me/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%B6%E4%BD%9Cvalidation%E6%A3%80%E6%B5%8B%E5%BA%93/</link>
      <pubDate>Tue, 08 Aug 2017 16:08:22 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%B6%E4%BD%9Cvalidation%E6%A3%80%E6%B5%8B%E5%BA%93/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;a href=&#34;https://gitee.com/lxrj/validation/&#34;&gt;Validation工具库&lt;/a&gt;是我在团队沟通协调过程中设计的一个开源的Java工具类库。这是一个简单的库，它不助力程序员解决开发过程中的疑难杂症，也无益程序运行时的性能。那么为什么还要设计这个库工具库呢？答案是沟通与协作。&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;一个软件研发团队，典型的成员和（或）涉众有：产品、设计、开发、测试、用户。通常产品和设计输入开发内容给开发，而开发则输出产品给测试和用户，在开发接收开发内容（输入）与交付产品（输出）之间，则是开发的加工过程，即开发活动。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个项目中实现的Vue权限校验插件</title>
      <link>http://www.szlx.me/post/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AE%9E%E7%8E%B0%E7%9A%84vue%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 10 Jul 2017 16:40:43 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AE%9E%E7%8E%B0%E7%9A%84vue%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;阅读&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue文档&lt;/a&gt;知道可以自定义插件和指令后便跃跃欲试，但一直没有尝试。最近项目进度压力不大，便尝试着使用Vue&lt;a href=&#34;https://gitee.com/lxrj/Vue-Auth/blob/master/Authorization.js&#34;&gt;自定义插件&lt;/a&gt;和指令将项目权限校验部分进行了重构。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>制作自己的Spring Boot Starter模块</title>
      <link>http://www.szlx.me/post/%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84springbootstarter%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Mon, 15 May 2017 16:16:46 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84springbootstarter%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;经过思考，放弃了自己搭建分布式文件系统的思路，决定采用第三方的文件服务器存储上传的图片。由于已经驻在阿里云上了，因此采用阿里的OSS。&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;阿里的SDK实在是没有体现出他们的水平，感觉就是大和杂，依赖很多，同样的功能都要引入好几个不同的包来处理，什么fastjson，gson，json-lib让人眼花。项目组伙伴吐槽后撂挑子了，只得去救火。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vue程序刷新时的状态恢复</title>
      <link>http://www.szlx.me/post/vue%E7%A8%8B%E5%BA%8F%E5%88%B7%E6%96%B0%E6%97%B6%E7%9A%84%E7%8A%B6%E6%80%81%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Thu, 09 Feb 2017 13:19:15 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/vue%E7%A8%8B%E5%BA%8F%E5%88%B7%E6%96%B0%E6%97%B6%E7%9A%84%E7%8A%B6%E6%80%81%E6%81%A2%E5%A4%8D/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;因为&lt;a href=&#34;http://www.oschina.net/&#34;&gt;OSChina&lt;/a&gt;的一篇介绍 Element UI 的文章，跟到官网看了下提供的组件合文档，便起了蹭了一回&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt;的热度。接着看了一天&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue中文文档&lt;/a&gt;便铁定了心。&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;呼哧呼哧地花了3天时间，搭了个单页程序的工程架子，完成了登录，权限校验和个人信息等功能的开发做为demo后，便交给团队其它伙伴们了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>不定期船模型实现</title>
      <link>http://www.szlx.me/post/%E4%B8%8D%E5%AE%9A%E6%9C%9F%E8%88%B9%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 30 Dec 2009 14:47:08 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/%E4%B8%8D%E5%AE%9A%E6%9C%9F%E8%88%B9%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;模型&#34;&gt;模型&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://www.szlx.me/img/不定期船模型实现/market_model.png&#34; alt=&#34;模型&#34; title=&#34;不定期船模型&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;动机&#34;&gt;动机&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&amp;#160; &amp;#160;规范市场模型和结构，为市场的交互者提供标准的行为模式；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;提供符合规范的最简易实现；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;实现数据和算法分离；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;实现数据的可配置，以及数据结构的可替换；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;实现算法的可替换；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;提供灵活的扩展性，并对扩展过程进行规范；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;充分利用Spring容器的特性，在面向Spring3的同时为Spring2.x提供兼容包装层；&lt;/li&gt;
&lt;li&gt;&amp;#160; &amp;#160;实现数据和算法分离；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>航运经营模拟模型设计思路</title>
      <link>http://www.szlx.me/post/%E8%88%AA%E8%BF%90%E7%BB%8F%E8%90%A5%E6%A8%A1%E6%8B%9F%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Thu, 05 Nov 2009 15:10:08 +0800</pubDate>
      
      <guid>http://www.szlx.me/post/%E8%88%AA%E8%BF%90%E7%BB%8F%E8%90%A5%E6%A8%A1%E6%8B%9F%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</guid>
      <description>&lt;p&gt;&amp;#160; &amp;#160;&amp;#160; &amp;#160;这是为上海大学构思的一个教学系统。得益于赵刚教授的指点，算是搞明白了几个概念的宏观意义。由于一些原因，中途离开了公司，不知道系统最后是否采用了这个思路。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>